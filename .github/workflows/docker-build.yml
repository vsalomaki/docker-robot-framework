name: Robot Framework in Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    # Release branches will trigger the creation of a git tag if the build is successful
    branches:
      - master
      - release/*
      - feature/arm-multiarch

  # Run tests for any PRs.
  pull_request:

env:
  # The image name
  IMAGE_NAME: docker-robot-framework:ci

jobs:
  # Build and run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build:
    runs-on: ${{ matrix.buildenv.runner }}
    strategy:
      matrix:
        buildenv:
          [
            {
              runner: ubuntu-24.04,
              tag: docker-robot-framework-amd64,
              platfrom: linux/amd64,
            },
            {
              runner: ubuntu-24.04-arm,
              tag: docker-robot-framework-arm64,
              platfrom: linux/arm64,
            },
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build the image
        run: |
          podman build --platform ${{ matrix.buildenv.platfrom }} -t ${{ matrix.buildenv.tag }} .
          podman save -o ${{ runner.temp }}/${{ matrix.buildenv.tag }}.tar ${{ matrix.buildenv.tag }}

      - name: Upload artifact temporarily
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.buildenv.tag }}
          path: ${{ runner.temp }}/${{ matrix.buildenv.tag }}.tar
          retention-days: 1

  test:
    needs: build
    runs-on: ${{ matrix.buildenv.runner }}
    strategy:
      matrix:
        browser: ["chrome", "edge", "firefox"]
        buildenv:
          [
            {
              runner: ubuntu-24.04,
              tag: docker-robot-framework-amd64,
              platfrom: linux/amd64,
            },
            {
              runner: ubuntu-24.04-arm,
              tag: docker-robot-framework-arm64,
              platfrom: linux/arm64,
            },
          ]
        exclude:
          - buildenv:
              {
                runner: ubuntu-24.04-arm,
                tag: docker-robot-framework-arm64,
                platfrom: linux/arm64,
              }
            browser: "edge"
    env:
      BROWSER: ${{ matrix.browser }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.buildenv.tag }}
          path: ${{ runner.temp }}

      - name: Load image
        run: podman load -i ${{ runner.temp }}/${{ matrix.buildenv.tag }}.tar

      - name: Basic Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/faker.robot:/opt/robotframework/tests/faker.robot:Z \
            -v `pwd`/test/requests.robot:/opt/robotframework/tests/requests.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -v `pwd`/test/timezones.robot:/opt/robotframework/tests/timezones.robot:Z \
            -e BROWSER=$BROWSER \
            ${{ matrix.buildenv.tag }}
      - name: Test dependency installation
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/pip-dependencies/main.robot:/opt/robotframework/tests/pip-dependencies.robot:Z \
            -v `pwd`/test/pip-dependencies/requirements.txt:/opt/robotframework/pip-requirements.txt:Z \
            -e BROWSER=$BROWSER \
            ${{ matrix.buildenv.tag }}
      - name: Colour Depth 16 Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -e BROWSER=$BROWSER \
            -e SCREEN_COLOUR_DEPTH=16 \
            ${{ matrix.buildenv.tag }}
      - name: Screen Width 800x600 Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -e BROWSER=$BROWSER \
            -e SCREEN_WIDTH=800 \
            -e SCREEN_HEIGHT=600 \
            ${{ matrix.buildenv.tag }}
      - name: Screen Width 1024x768 Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -e BROWSER=$BROWSER \
            -e SCREEN_WIDTH=1024 \
            -e SCREEN_HEIGHT=768 \
            ${{ matrix.buildenv.tag }}
      - name: Screen Width 1280x1024 Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -e BROWSER=$BROWSER \
            -e SCREEN_WIDTH=1280 \
            -e SCREEN_HEIGHT=1024 \
            ${{ matrix.buildenv.tag }}
      - name: Screen Width 2560x1440 Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -e BROWSER=$BROWSER \
            -e SCREEN_WIDTH=2560 \
            -e SCREEN_HEIGHT=1440 \
            ${{ matrix.buildenv.tag }}
      - name: Screen Width 3840x2160 Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -e BROWSER=$BROWSER \
            -e SCREEN_WIDTH=3840 \
            -e SCREEN_HEIGHT=2160 \
            ${{ matrix.buildenv.tag }}
      - name: Debug Log Level Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/faker.robot:/opt/robotframework/tests/faker.robot:Z \
            -e BROWSER=$BROWSER \
            -e ROBOT_OPTIONS="--loglevel DEBUG" \
            ${{ matrix.buildenv.tag }}
      - name: Basic Multithreaded Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/faker.robot:/opt/robotframework/tests/faker.robot:Z \
            -v `pwd`/test/requests.robot:/opt/robotframework/tests/requests.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -v `pwd`/test/timezones.robot:/opt/robotframework/tests/timezones.robot:Z \
            -e BROWSER=$BROWSER \
            -e ROBOT_THREADS=4 \
            ${{ matrix.buildenv.tag }}
      - name: Test Level Multithreaded Test
        run: |
          podman run --shm-size=1g \
            -v `pwd`/test/browser-library.robot:/opt/robotframework/tests/browser-library.robot:Z \
            -v `pwd`/test/faker.robot:/opt/robotframework/tests/faker.robot:Z \
            -v `pwd`/test/requests.robot:/opt/robotframework/tests/requests.robot:Z \
            -v `pwd`/test/selenium.robot:/opt/robotframework/tests/selenium.robot:Z \
            -v `pwd`/test/timezones.robot:/opt/robotframework/tests/timezones.robot:Z \
            -e BROWSER=$BROWSER \
            -e ROBOT_THREADS=4 \
            -e PABOT_OPTIONS="--testlevelsplit" \
            ${{ matrix.buildenv.tag }}
      - name: Custom User Test
        run: |
          podman run --user=2000 --shm-size=1g \
            -v `pwd`/test/faker.robot:/opt/robotframework/tests/faker.robot:Z \
            -e BROWSER=$BROWSER \
            ${{ matrix.buildenv.tag }}
      - name: Custom User and Group Test
        run: |
          podman run --user=2000:2000 --shm-size=1g \
            -v `pwd`/test/faker.robot:/opt/robotframework/tests/faker.robot:Z \
            -e BROWSER=$BROWSER \
            ${{ matrix.buildenv.tag }}
      - name: Datetime
        run: |
          podman run --user=2000:2000 --shm-size=1g \
            -v `pwd`/test/timezones.robot:/opt/robotframework/tests/timezones.robot:Z \
            -e BROWSER=$BROWSER \
            -e TZ="America/New_York" \
            ${{ matrix.buildenv.tag }}
      - name: Rerun Test
        run: |
          podman run --user=2000:2000 --shm-size=1g \
            -v `pwd`/test/rerun.robot:/opt/robotframework/tests/rerun.robot:Z \
            -e ROBOT_RERUN_FAILED=20 \
            ${{ matrix.buildenv.tag }}

  combine:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download AMD64 image
        uses: actions/download-artifact@v4
        with:
          name: docker-robot-framework-amd64
          path: ${{ runner.temp }}/docker-robot-framework-amd64.tar

      - name: Download ARM64 image
        uses: actions/download-artifact@v4
        with:
          name: docker-robot-framework-arm64
          path: ${{ runner.temp }}/docker-robot-framework-arm64.tar

      - name: Create manifest and add images
        run: |
          podman manifest create $IMAGE_NAME
          podman load -i ${{ runner.temp }}/docker-robot-framework-amd64.tar
          podman manifest add $IMAGE_NAME docker-robot-framework-amd64
          podman load -i ${{ runner.temp }}/docker-robot-framework-arm64.tar
          podman manifest add $IMAGE_NAME docker-robot-framework-arm64
